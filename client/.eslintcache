[{"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\index.js":"1","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\store.js":"2","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\App.js":"3","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Login.js":"4","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\CreateProfile.js":"5","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\routing\\PrivateRoute.js":"6","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PersonProfile.js":"7","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\utils\\setAuthToken.js":"8","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\auth.js":"9","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Register.js":"10","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Home.js":"11","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Navb.js":"12","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanProfile.js":"13","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\VisitedProfile.js":"14","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\EditProfile.js":"15","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteProfile.js":"16","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\index.js":"17","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\artisanProfile.js":"18","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\personProfile.js":"19","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Spinner.js":"20","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\alert.js":"21","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\types.js":"22","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Alert.js":"23","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CategoriesCarousel.js":"24","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Search.js":"25","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Thumbs.js":"26","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Profiles.js":"27","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\post.js":"28","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PostCard.js":"29","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteButton.js":"30","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\alertReducer.js":"31","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\artisanProfileReducer.js":"32","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\authReducer.js":"33","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\postReducer.js":"34","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\personProfileReducer.js":"35","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanCard.js":"36","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CommentCard.js":"37"},{"size":548,"mtime":1613051147710,"results":"38","hashOfConfig":"39"},{"size":399,"mtime":1612703150931,"results":"40","hashOfConfig":"39"},{"size":2821,"mtime":1613940477464,"results":"41","hashOfConfig":"39"},{"size":3462,"mtime":1613337513465,"results":"42","hashOfConfig":"39"},{"size":8477,"mtime":1613580555687,"results":"43","hashOfConfig":"39"},{"size":518,"mtime":1612947657486,"results":"44","hashOfConfig":"39"},{"size":3871,"mtime":1613658896707,"results":"45","hashOfConfig":"39"},{"size":253,"mtime":1612863972202,"results":"46","hashOfConfig":"39"},{"size":2849,"mtime":1613860077296,"results":"47","hashOfConfig":"39"},{"size":7577,"mtime":1613658916475,"results":"48","hashOfConfig":"39"},{"size":842,"mtime":1613941345659,"results":"49","hashOfConfig":"39"},{"size":4432,"mtime":1613940477469,"results":"50","hashOfConfig":"39"},{"size":8165,"mtime":1613940477466,"results":"51","hashOfConfig":"39"},{"size":5213,"mtime":1613940477473,"results":"52","hashOfConfig":"39"},{"size":22202,"mtime":1613940477478,"results":"53","hashOfConfig":"39"},{"size":7735,"mtime":1613940477476,"results":"54","hashOfConfig":"39"},{"size":477,"mtime":1613337513479,"results":"55","hashOfConfig":"39"},{"size":4530,"mtime":1613860077294,"results":"56","hashOfConfig":"39"},{"size":2912,"mtime":1613860077299,"results":"57","hashOfConfig":"39"},{"size":401,"mtime":1613164517873,"results":"58","hashOfConfig":"39"},{"size":338,"mtime":1612703150920,"results":"59","hashOfConfig":"39"},{"size":1384,"mtime":1613747212767,"results":"60","hashOfConfig":"39"},{"size":421,"mtime":1612783773167,"results":"61","hashOfConfig":"39"},{"size":5374,"mtime":1613726034252,"results":"62","hashOfConfig":"39"},{"size":3898,"mtime":1613747212774,"results":"63","hashOfConfig":"39"},{"size":1023,"mtime":1613940477471,"results":"64","hashOfConfig":"39"},{"size":913,"mtime":1613580555684,"results":"65","hashOfConfig":"39"},{"size":3052,"mtime":1613860077301,"results":"66","hashOfConfig":"39"},{"size":5968,"mtime":1613940477470,"results":"67","hashOfConfig":"39"},{"size":2324,"mtime":1613940477474,"results":"68","hashOfConfig":"39"},{"size":424,"mtime":1612703150928,"results":"69","hashOfConfig":"39"},{"size":2173,"mtime":1613747212782,"results":"70","hashOfConfig":"39"},{"size":1129,"mtime":1613680824952,"results":"71","hashOfConfig":"39"},{"size":1878,"mtime":1613680824955,"results":"72","hashOfConfig":"39"},{"size":946,"mtime":1613426582301,"results":"73","hashOfConfig":"39"},{"size":3197,"mtime":1613843692062,"results":"74","hashOfConfig":"39"},{"size":1498,"mtime":1613680824944,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1wsxm8l",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\index.js",[],["159","160"],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\store.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\App.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Login.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PersonProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\auth.js",["161"],"import axios from 'axios';\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOG_OUT,\r\n  CLEAR_PROFILE,\r\n  CLEAR_PERSON_PROFILE,\r\n  UPDATE_FAIL,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(`/api/auth`);\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (\r\n  { name, email, password, role, job, phone },\r\n  history\r\n) => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  const config = {\r\n    header: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = { name, email, password, role, job, phone };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/user`, body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n\r\n    if (role === 'Artisan') {\r\n      history.push('/artisanprofile/me');\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        dispatch(setAlert({ msg: error.msg, alertType: 'danger' }));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  const config = {\r\n    header: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/auth`, body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        dispatch(setAlert({ msg: error.msg, alertType: 'danger' }));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Log out user/ clear profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: CLEAR_PERSON_PROFILE });\r\n  dispatch({ type: LOG_OUT });\r\n};\r\n\r\n// Update user\r\nexport const updateUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(`/api/user/update`, formData, config);\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({ type: UPDATE_FAIL });\r\n  }\r\n};\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Register.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Home.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Navb.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanProfile.js",["162","163"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getArtisanCurrentProfile } from '../actions/artisanProfile';\r\nimport Spinner from './Spinner';\r\nimport PostCard from './PostCard';\r\nimport { getPosts, addPost } from '../actions/post';\r\nimport Thumbs from './Thumbs';\r\n\r\nconst ArtisanProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const artisanProfileState = useSelector((store) => store.artisan);\r\n  const posts = useSelector((state) => state.post);\r\n  const auth = useSelector((store) => store.auth);\r\n  const [text, setText] = useState('');\r\n\r\n  const rateAverage =\r\n    artisanProfileState.profile && artisanProfileState.profile.rate.length > 0\r\n      ? artisanProfileState.profile.rate.reduce(\r\n          (acc, rate) => acc + rate.value,\r\n          0\r\n        ) / artisanProfileState.profile.rate.length\r\n      : 0;\r\n\r\n  useEffect(() => {\r\n    dispatch(getArtisanCurrentProfile());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (artisanProfileState.profile) {\r\n      dispatch(getPosts(artisanProfileState.profile.user._id));\r\n    }\r\n  }, [artisanProfileState.profile]);\r\n\r\n  return (\r\n    <div>\r\n      {artisanProfileState.loading && !artisanProfileState.profile ? (\r\n        <Spinner />\r\n      ) : !artisanProfileState.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <p>\r\n            <i className='fas fa user' /> Welcome {auth.user && auth.user.name}\r\n          </p>\r\n          <p>You have not yet a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create profile\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/artisanprofile/me'>\r\n                    <img src={artisanProfileState.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{artisanProfileState.profile.user.name}</h1>\r\n                  <p>{artisanProfileState.profile.user.email}</p>\r\n                  <div className='ratingInProfile d-flex justify-content-center'>\r\n                    <Thumbs rate={rateAverage} />\r\n                  </div>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white active w-100'>\r\n                    <Link className='nav-link' to='/artisanprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>:{' '}\r\n                      {artisanProfileState.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>:{' '}\r\n                      {artisanProfileState.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>:{' '}\r\n                      {artisanProfileState.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>:{' '}\r\n                      {artisanProfileState.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {` ${artisanProfileState.profile.street}, ${artisanProfileState.profile.city}, ${artisanProfileState.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{' '}\r\n                      {artisanProfileState.profile.equipment ? 'Yes' : 'No'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>\r\n                  {artisanProfileState.profile.bio || 'Bio'}\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <form>\r\n                  <textarea\r\n                    placeholder='Whats in your mind today?'\r\n                    rows='2'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    className='form-control input-lg p-text-area'\r\n                  ></textarea>\r\n                </form>\r\n                <footer className='panel-footer d-flex flex-row-reverse justify-content-between align-items-center'>\r\n                  <button\r\n                    className='btn post'\r\n                    onClick={() => {\r\n                      dispatch(addPost({ text }));\r\n                      setText('');\r\n                    }}\r\n                  >\r\n                    Post\r\n                  </button>\r\n                  <ul className='nav nav-pills'>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <button className='btn'>\r\n                          <i className='fa fa-map-marker mx-1'></i>\r\n                        </button>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <button className='btn'>\r\n                          <i className='fa fa-camera mx-1'></i>\r\n                        </button>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <button className='btn'>\r\n                          <i className=' fa fa-film mx-1'></i>\r\n                        </button>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <button className='btn'>\r\n                          <i className='fa fa-microphone mx-1'></i>\r\n                        </button>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </footer>\r\n              </div>\r\n              {posts.posts ? (\r\n                posts.posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    photo={post.avatar}\r\n                    fullName={post.name}\r\n                    content={post.text}\r\n                    comments={post.comments}\r\n                    likes={post.likes}\r\n                    id={post._id}\r\n                    userId={post.user}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Spinner />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\VisitedProfile.js",["164","165","166"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileById } from '../actions/artisanProfile';\r\nimport PostCard from './PostCard';\r\nimport Spinner from './Spinner';\r\nimport { getPosts } from '../actions/post';\r\nimport Thumbs from './Thumbs';\r\n\r\nconst VisitedProfile = ({ profileId }) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((store) => store.auth);\r\n  const profile = useSelector((store) => store.artisan);\r\n  const posts = useSelector((state) => state.post);\r\n  const [rate, setRate] = useState(0);\r\n  const [yourRate, setYourRate] = useState(false);\r\n\r\n  const rateAverage =\r\n    profile.profile && profile.profile.rate.length > 0\r\n      ? profile.profile.rate.reduce((acc, rate) => acc + rate.value, 0) /\r\n        profile.profile.rate.length\r\n      : 0;\r\n\r\n  useEffect(() => {\r\n    setRate(\r\n      profile.profile &&\r\n        profile.profile.rate &&\r\n        auth.user &&\r\n        profile.profile.rate.find((rate) => rate.user === auth.user._id)\r\n        ? profile.profile.rate.find((rate) => rate.user === auth.user._id).value\r\n        : 0\r\n    );\r\n  }, [profile]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileById(profileId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (profile.profile) {\r\n      dispatch(getPosts(profile.profile.user._id));\r\n    }\r\n  }, [profile.profile]);\r\n\r\n  return (\r\n    <div>\r\n      {!profile.profile ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to={`/visitedartisanprofile/${profileId}`}>\r\n                    <img src={profile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{profile.profile.user.name}</h1>\r\n                  <p>{profile.profile.user.email}</p>\r\n                  <div className='ratingInProfile d-flex justify-content-center'>\r\n                    <Thumbs rate={rateAverage} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {yourRate\r\n                ? auth.user &&\r\n                  (rate ? (\r\n                    <Thumbs rate={rate} />\r\n                  ) : (\r\n                    <Thumbs rate={rate} setRate={setRate} evaluate={true} />\r\n                  ))\r\n                : auth.user && (\r\n                    <button\r\n                      className='btn post'\r\n                      onClick={() => {\r\n                        setYourRate(true);\r\n                      }}\r\n                    >\r\n                      Evaluate Artisan\r\n                    </button>\r\n                  )}\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {profile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>: {profile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {profile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {profile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {` ${profile.profile.street}, ${profile.profile.city}, ${profile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{' '}\r\n                      {profile.profile.equipment ? 'Yes' : 'No'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>{profile.profile.bio}</div>\r\n              </div>\r\n              {posts.posts ? (\r\n                posts.posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    photo={profile.profile.user.avatar}\r\n                    fullName={profile.profile.user.name}\r\n                    content={post.text}\r\n                    comments={post.comments}\r\n                    likes={post.likes}\r\n                    id={post._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Spinner />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\EditProfile.js",["167","168","169"],"import Spinner from '../Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateUser } from '../../actions/auth';\r\nimport {\r\n  createArtisanProfile,\r\n  getArtisanCurrentProfile,\r\n} from '../../actions/artisanProfile';\r\n\r\nimport {\r\n  createPersonProfile,\r\n  getPersonCurrentProfile,\r\n} from '../../actions/personProfile';\r\n\r\nconst EditProfile = () => {\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n  const [city, setCity] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [equipment, setEquipment] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [job, setJob] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const ProfileArtisan = useSelector((state) => state.artisan);\r\n  const ProfilePerson = useSelector((state) => state.person);\r\n\r\n  useEffect(() => {\r\n    if (ProfileArtisan.profile) {\r\n      dispatch(getPosts(ProfileArtisan.profile.user._id));\r\n    }\r\n  }, [ProfileArtisan.profile]);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Artisan') {\r\n      dispatch(getArtisanCurrentProfile());\r\n      setCity(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.city\r\n          ? ''\r\n          : ProfileArtisan.profile.city\r\n      );\r\n      setStreet(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.street\r\n          ? ''\r\n          : ProfileArtisan.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.zipcode\r\n          ? ''\r\n          : ProfileArtisan.profile.zipcode\r\n      );\r\n      setBio(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.bio\r\n          ? ''\r\n          : ProfileArtisan.profile.bio\r\n      );\r\n      setEquipment(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.equipment\r\n          ? ''\r\n          : ProfileArtisan.profile.equipment\r\n      );\r\n      setName(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.name\r\n          ? ''\r\n          : ProfileArtisan.profile.user.name\r\n      );\r\n      setPhone(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.phone\r\n          ? ''\r\n          : ProfileArtisan.profile.user.phone\r\n      );\r\n      setJob(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.job\r\n          ? ''\r\n          : ProfileArtisan.profile.user.job\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Person') {\r\n      dispatch(getPersonCurrentProfile());\r\n      setCity(\r\n        ProfilePerson.loading || !ProfilePerson.profile.city\r\n          ? ''\r\n          : ProfilePerson.profile.city\r\n      );\r\n      setStreet(\r\n        ProfilePerson.loading || !ProfilePerson.profile.street\r\n          ? ''\r\n          : ProfilePerson.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfilePerson.loading || !ProfilePerson.profile.zipcode\r\n          ? ''\r\n          : ProfilePerson.profile.zipcode\r\n      );\r\n      setName(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.name\r\n          ? ''\r\n          : ProfilePerson.profile.user.name\r\n      );\r\n      setPhone(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.phone\r\n          ? ''\r\n          : ProfilePerson.profile.user.phone\r\n      );\r\n      setJob(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.job\r\n          ? ''\r\n          : ProfilePerson.profile.user.job\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {ProfilePerson.loading && ProfileArtisan.loading ? (\r\n        <Spinner />\r\n      ) : ProfilePerson.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/personprofile/me'>\r\n                    <img src={ProfilePerson.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{ProfilePerson.profile.user.name}</h1>\r\n                  <p>{ProfilePerson.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/personprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white active w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {ProfilePerson.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {ProfilePerson.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {ProfilePerson.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {`${ProfilePerson.profile.street}, ${ProfilePerson.profile.city}, ${ProfilePerson.profile.zipcode}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form className='form  updateProfileForm col-md-12 '>\r\n                <div className='form-group'>\r\n                  <input\r\n                    className='updateInput col-sm-12 '\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    style={{ background: 'whitesmoke' }}\r\n                    className='updateInput col-sm-12'\r\n                    name='job'\r\n                    value={job}\r\n                    onChange={(e) => setJob(e.target.value)}\r\n                  >\r\n                    <option value='select'> Select job type *</option>\r\n                    <option value='Bricklayer'>Bricklayer</option>\r\n                    <option value='Electrician'>Electrician</option>\r\n                    <option value='Painter'>Painter</option>\r\n                    <option value='Plumber'>Plumber</option>\r\n                    <option value='Mechanic'>Mechanic </option>\r\n                    <option value='Welder'>Welder</option>\r\n                    <option value='Carpenter'>Carpenter</option>\r\n                    <option value='Architect'>Architect</option>\r\n                  </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='updateInput col-sm-12'\r\n                    style={{ background: 'whitesmoke' }}\r\n                    name='city'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n                    <option value=''> * city </option>\r\n                    <option value='Ariana'>Ariana</option>\r\n                    <option value='Beja'>Beja</option>\r\n                    <option value='Ben Arous'>Ben Arous</option>\r\n                    <option value='Bizerte'>Bizerte</option>\r\n                    <option value='Gabes'>Gabes </option>\r\n                    <option value='Gafsa'>Gafsa</option>\r\n                    <option value='Jendouba'>Jendouba</option>\r\n                    <option value='Kairouane'>Kairouane</option>\r\n                    <option value='Kasserine'>Kasserine</option>\r\n                    <option value='kébili'>kébili</option>\r\n                    <option value='Kef'>Kef</option>\r\n                    <option value='Mahdia'>Mahdia</option>\r\n                    <option value='Manouba'>Manouba</option>\r\n                    <option value='Médenine'>Médenine</option>\r\n                    <option value='Monastir'>Monastir</option>\r\n                    <option value='Nabeul'>Nabeul</option>\r\n                    <option value='Sfax'>Sfax</option>\r\n                    <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                    <option value='Siliana'>Siliana</option>\r\n                    <option value='Sousse'>Sousse</option>\r\n                    <option value='Tataouine'>Tataouine</option>\r\n                    <option value='Tozeur'>Tozeur</option>\r\n                    <option value='Tunis'>Tunis</option>\r\n                    <option value='Zaghouane'>Zaghouane</option>\r\n                  </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    className='updateInput col-sm-12'\r\n                    type='text'\r\n                    placeholder='Street'\r\n                    name='street'\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    className='updateInput col-sm-12'\r\n                    type='number'\r\n                    placeholder='Zipcode'\r\n                    name='zipcode'\r\n                    value={zipcode}\r\n                    onChange={(e) => setZipcode(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    className='updateInput col-sm-12'\r\n                    type='number'\r\n                    placeholder='Phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to='/artisanprofile/me'>\r\n                  <button\r\n                    className='btn post'\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        createPersonProfile(\r\n                          { city, street, zipcode, phone },\r\n                          history,\r\n                          true\r\n                        )\r\n                      );\r\n                      dispatch(updateUser({ name, job, phone }));\r\n                    }}\r\n                    type='submit'\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ProfileArtisan.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/artisanprofile/me'>\r\n                      <img src={ProfileArtisan.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{ProfileArtisan.profile.user.name}</h1>\r\n                    <p>{ProfileArtisan.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/artisanprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{' '}\r\n                        {ProfileArtisan.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Profession </span>:{' '}\r\n                        {ProfileArtisan.profile.user.job}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>:{' '}\r\n                        {ProfileArtisan.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>:{' '}\r\n                        {ProfileArtisan.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{' '}\r\n                        {` ${ProfileArtisan.profile.street}, ${ProfileArtisan.profile.city}, ${ProfileArtisan.profile.zipcode} `}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Equipments </span>:{' '}\r\n                        {ProfileArtisan.profile.equipment ? 'Yes' : 'No'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <div className='bio-graph-heading'>\r\n                    {ProfileArtisan.profile.bio}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <form className='form updateProfileForm col-md-12'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        className='updateInput col-sm-12'\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        className='updateInput col-sm-12'\r\n                        name='job'\r\n                        value={job}\r\n                        onChange={(e) => setJob(e.target.value)}\r\n                      >\r\n                        <option value='select'> Select job type *</option>\r\n                        <option value='Bricklayer'>Bricklayer</option>\r\n                        <option value='Electrician'>Electrician</option>\r\n                        <option value='Painter'>Painter</option>\r\n                        <option value='Plumber'>Plumber</option>\r\n                        <option value='Mechanic'>Mechanic </option>\r\n                        <option value='Welder'>Welder</option>\r\n                        <option value='Carpenter'>Carpenter</option>\r\n                        <option value='Architect'>Architect</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        className='updateInput col-sm-12'\r\n                        name='city'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      >\r\n                        <option value=''> * city </option>\r\n                        <option value='Ariana'>Ariana</option>\r\n                        <option value='Beja'>Beja</option>\r\n                        <option value='Ben Arous'>Ben Arous</option>\r\n                        <option value='Bizerte'>Bizerte</option>\r\n                        <option value='Gabes'>Gabes </option>\r\n                        <option value='Gafsa'>Gafsa</option>\r\n                        <option value='Jendouba'>Jendouba</option>\r\n                        <option value='Kairouane'>Kairouane</option>\r\n                        <option value='Kasserine'>Kasserine</option>\r\n                        <option value='kébili'>kébili</option>\r\n                        <option value='Kef'>Kef</option>\r\n                        <option value='Mahdia'>Mahdia</option>\r\n                        <option value='Manouba'>Manouba</option>\r\n                        <option value='Médenine'>Médenine</option>\r\n                        <option value='Monastir'>Monastir</option>\r\n                        <option value='Nabeul'>Nabeul</option>\r\n                        <option value='Sfax'>Sfax</option>\r\n                        <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                        <option value='Siliana'>Siliana</option>\r\n                        <option value='Sousse'>Sousse</option>\r\n                        <option value='Tataouine'>Tataouine</option>\r\n                        <option value='Tozeur'>Tozeur</option>\r\n                        <option value='Tunis'>Tunis</option>\r\n                        <option value='Zaghouane'>Zaghouane</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        className='updateInput col-sm-12'\r\n                        type='text'\r\n                        placeholder='Street'\r\n                        name='street'\r\n                        value={street}\r\n                        onChange={(e) => setStreet(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        className='updateInput col-sm-12'\r\n                        type='number'\r\n                        placeholder='Zipcode'\r\n                        name='zipcode'\r\n                        value={zipcode}\r\n                        onChange={(e) => setZipcode(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        className='updateInput col-sm-12'\r\n                        type='number'\r\n                        placeholder='Phone'\r\n                        name='phone'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        className='updateInput col-sm-12'\r\n                        type='boolean'\r\n                        name='equipment'\r\n                        value={equipment}\r\n                        onChange={(e) => setEquipment(e.target.value)}\r\n                      >\r\n                        <option value=''> equipment </option>\r\n                        <option value='true'>With equipment</option>\r\n                        <option value='false'>Without equipment</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <textarea\r\n                        className='updateInput col-sm-12'\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                    <Link to='/artisanprofile/me'>\r\n                      <button\r\n                        className='btn post'\r\n                        onClick={() => {\r\n                          dispatch(\r\n                            createArtisanProfile(\r\n                              { city, street, zipcode, bio, equipment },\r\n                              history,\r\n                              true\r\n                            )\r\n                          );\r\n                          dispatch(updateUser({ name, job, phone }));\r\n                        }}\r\n                        type='submit'\r\n                      >\r\n                        Save changes\r\n                      </button>\r\n                    </Link>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteProfile.js",["170","171"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getArtisanCurrentProfile } from '../../actions/artisanProfile';\r\n\r\nimport { getPersonCurrentProfile } from '../../actions/personProfile';\r\nimport DeleteButton from './DeleteButton';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ArtisanProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const artisanProfile = useSelector((store) => store.artisan);\r\n  const personProfile = useSelector((store) => store.person);\r\n\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Artisan') {\r\n      dispatch(getArtisanCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Person') {\r\n      dispatch(getPersonCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisanProfile.loading && personProfile.loading ? (\r\n        <Spinner />\r\n      ) : artisanProfile.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/artisanprofile/me'>\r\n                    <img src={artisanProfile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{artisanProfile.profile.user.name}</h1>\r\n                  <p>{artisanProfile.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/artisanprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block text-white active w-100'>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>:{' '}\r\n                      {artisanProfile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>:{' '}\r\n                      {artisanProfile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {artisanProfile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {artisanProfile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {` ${artisanProfile.profile.street}, ${artisanProfile.profile.city}, ${artisanProfile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{' '}\r\n                      {artisanProfile.profile.equipment ? 'Yes' : 'No'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>\r\n                  {artisanProfile.profile.bio}\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <DeleteButton />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        personProfile.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/personprofile/me'>\r\n                      <img src={personProfile.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{personProfile.profile.user.name}</h1>\r\n                    <p>{personProfile.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/personprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{' '}\r\n                        {personProfile.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>: {personProfile.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>: {personProfile.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{' '}\r\n                        {`${personProfile.profile.street}, ${personProfile.profile.city}, ${personProfile.profile.zipcode}`}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <DeleteButton />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\index.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\artisanProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\personProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Spinner.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\alert.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\types.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Alert.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CategoriesCarousel.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Search.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Thumbs.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Profiles.js",["172"],"import React, { useEffect } from 'react';\r\nimport Spinner from './Spinner';\r\nimport ArtisanCard from './ArtisanCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterProfiles } from '../actions/artisanProfile';\r\n\r\nconst Profiles = ({ rate, job, equipment, city }) => {\r\n  const artisan = useSelector((state) => state.artisan);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterProfiles({ job, equipment, city, rate }));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisan.loading || !artisan.profiles ? (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      ) : artisan.profiles ? (\r\n        <div>\r\n          {artisan.profiles.map((artisan) => (\r\n            <ArtisanCard key={artisan._id} artisan={artisan} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h1>No profiles found</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\post.js",["173"],"import axios from 'axios';\r\nimport {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\n//Get posts\r\nexport const getPosts = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/user/${userId}`);\r\n\r\n    dispatch({ type: GET_POSTS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/posts`, formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Likes\r\nexport const updateLikes = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postId, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/${postId}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: postId,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Comment\r\nexport const addComment = ({ postId, formData }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      { text: formData },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: { id: postId, comments: res.data },\r\n    });\r\n\r\n    dispatch(setAlert('Comment added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Comment\r\nexport const deleteComment = ({ postId, commentId }) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: { postId, commentId },\r\n    });\r\n    dispatch(setAlert('Comment deleted', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PostCard.js",["174","175"],"import React, { useState, useEffect } from 'react';\r\nimport { updateLikes, deletePost, addComment } from '../actions/post';\r\nimport { setAlert } from '../actions/alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CommentCard from './CommentCard';\r\n\r\nconst PostCard = ({\r\n  photo,\r\n  fullName,\r\n  content,\r\n  comments,\r\n  likes,\r\n  id,\r\n  userId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const defaultImg =\r\n    'http://www.gravatar.com/avatar/c1a276b8587995e9f29e1b7fe9148169?s=200&r=pg&d=mm';\r\n  const [text, setText] = useState('');\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [showCommentBox, setShowCommentBox] = useState(false);\r\n\r\n  var commentsNumber = comments.length;\r\n  var likesNumber = likes.length;\r\n\r\n  useEffect(() => {\r\n    commentsNumber = comments.length;\r\n    likesNumber = likes.length;\r\n  }, [comments, likes]);\r\n  return (\r\n    <div className='container postContainer col-md-12'>\r\n      {/* <!-- begin tab-content --> */}\r\n\r\n      <div className='tab-content p-0'>\r\n        {/* <!-- begin /profile-post tab --> */}\r\n\r\n        <div className='tab-pane fade active show' id='profile-post'>\r\n          {/* <!-- begin timeline --> */}\r\n\r\n          <div className='timeline-icon'>\r\n            <a href='/'>&nbsp;</a>\r\n          </div>\r\n          <div className='timeline-body'>\r\n            <div className='timeline-header'>\r\n              <span>\r\n                <img\r\n                  className='rounded-circle mr-2'\r\n                  width='40'\r\n                  src={photo}\r\n                  alt=''\r\n                />\r\n              </span>\r\n              <span className='username'>{fullName}</span>\r\n              {((auth.user && auth.user.role === 'Admin') ||\r\n                (auth.user && auth.user._id === userId)) && (\r\n                <button\r\n                  type='button'\r\n                  className='close'\r\n                  aria-label='Close'\r\n                  onClick={() => dispatch(deletePost(id))}\r\n                >\r\n                  <span aria-hidden='true'>&times;</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className='timeline-content'>\r\n              <p>{content}</p>\r\n              <img alt=''></img>\r\n            </div>\r\n            <div className='timeline-likes'>\r\n              <div\r\n                className='stats-right'\r\n                onClick={() => setShowComments(!showComments)}\r\n              >\r\n                <span className='stats-text'>{commentsNumber} Comments</span>\r\n              </div>\r\n              <div className='stats'>\r\n                <span className='fa-stack fa-fw stats-icon'>\r\n                  <i className='fa fa-circle fa-stack-2x text-primary'></i>\r\n                  <i className='fa fa-thumbs-up fa-stack-1x fa-inverse'></i>\r\n                </span>\r\n                <span className='stats-total'>{likesNumber}</span>\r\n              </div>\r\n            </div>\r\n            <div className='timeline-footer'>\r\n              <button\r\n                className='btn m-r-15 text-inverse-lighter mr-1'\r\n                onClick={() => {\r\n                  auth.user\r\n                    ? dispatch(updateLikes(id))\r\n                    : setAlert({ msg: 'Please Connect', alertType: 'danger' });\r\n                }}\r\n              >\r\n                <i className='fa fa-thumbs-up fa-fw fa-lg m-r-3'></i>Like\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setShowCommentBox(auth.user ? true : false);\r\n                  !auth.user &&\r\n                    setAlert({ msg: 'Please Connect', alertType: 'danger' });\r\n                }}\r\n              >\r\n                <i className='fa fa-comments fa-fw fa-lg m-r-3'></i>Comment\r\n              </button>\r\n            </div>\r\n            {showCommentBox && (\r\n              <div className='timeline-comment-box col-md-11'>\r\n                <div className='user'>\r\n                  <img\r\n                    src={!!auth.user ? auth.user.avatar : defaultImg}\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='input col-sm-12'>\r\n                  <form action=''>\r\n                    <div className='input-group '>\r\n                      <input\r\n                        type='text'\r\n                        className='form-control rounded-corner mr-3'\r\n                        placeholder='Write a comment...'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                      />\r\n                      <span className='input-group-btn p-l-10'>\r\n                        <button\r\n                          className='btn btn-primary f-s-12 rounded-corner mr-3'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            text &&\r\n                              dispatch(\r\n                                addComment({ postId: id, formData: text })\r\n                              );\r\n                            setText('');\r\n\r\n                            setShowComments(true);\r\n                          }}\r\n                        >\r\n                          Comment\r\n                        </button>\r\n                      </span>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {showComments &&\r\n          comments.map((comment, i) => (\r\n            <CommentCard\r\n              key={i}\r\n              postWriter={userId}\r\n              commentWriter={comment.user}\r\n              name={comment.name}\r\n              photo={comment.avatar}\r\n              comment={comment.text}\r\n              commentId={comment._id}\r\n              postId={id}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteButton.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\alertReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\artisanProfileReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\postReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\personProfileReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanCard.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CommentCard.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":130,"column":11,"nodeType":"182","messageId":"183","endLine":130,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":27,"column":6,"nodeType":"186","endLine":27,"endColumn":8,"suggestions":"187"},{"ruleId":"184","severity":1,"message":"185","line":33,"column":6,"nodeType":"186","endLine":33,"endColumn":35,"suggestions":"188"},{"ruleId":"184","severity":1,"message":"189","line":33,"column":6,"nodeType":"186","endLine":33,"endColumn":15,"suggestions":"190"},{"ruleId":"184","severity":1,"message":"191","line":37,"column":6,"nodeType":"186","endLine":37,"endColumn":8,"suggestions":"192"},{"ruleId":"184","severity":1,"message":"185","line":43,"column":6,"nodeType":"186","endLine":43,"endColumn":23,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"185","line":38,"column":6,"nodeType":"186","endLine":38,"endColumn":30,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":84,"column":6,"nodeType":"186","endLine":84,"endColumn":8,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"197","line":120,"column":6,"nodeType":"186","endLine":120,"endColumn":8,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"199","line":22,"column":6,"nodeType":"186","endLine":22,"endColumn":8,"suggestions":"200"},{"ruleId":"184","severity":1,"message":"199","line":28,"column":6,"nodeType":"186","endLine":28,"endColumn":8,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"202","line":13,"column":6,"nodeType":"186","endLine":13,"endColumn":8,"suggestions":"203"},{"ruleId":"180","severity":1,"message":"181","line":70,"column":11,"nodeType":"182","messageId":"183","endLine":70,"endColumn":14},{"ruleId":"184","severity":1,"message":"204","line":30,"column":22,"nodeType":"205","endLine":30,"endColumn":37},{"ruleId":"184","severity":1,"message":"206","line":31,"column":19,"nodeType":"205","endLine":31,"endColumn":31},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["209"],["210"],"React Hook useEffect has a missing dependency: 'auth.user'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'dispatch' and 'profileId'. Either include them or remove the dependency array.",["212"],["213"],["214"],"React Hook useEffect has missing dependencies: 'ProfileArtisan.loading', 'ProfileArtisan.profile.bio', 'ProfileArtisan.profile.city', 'ProfileArtisan.profile.equipment', 'ProfileArtisan.profile.street', 'ProfileArtisan.profile.user.job', 'ProfileArtisan.profile.user.name', 'ProfileArtisan.profile.user.phone', 'ProfileArtisan.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'ProfilePerson.loading', 'ProfilePerson.profile.city', 'ProfilePerson.profile.street', 'ProfilePerson.profile.user.job', 'ProfilePerson.profile.user.name', 'ProfilePerson.profile.user.phone', 'ProfilePerson.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userRole'. Either include them or remove the dependency array.",["217"],["218"],"React Hook useEffect has missing dependencies: 'city', 'dispatch', 'equipment', 'job', and 'rate'. Either include them or remove the dependency array.",["219"],"Assignments to the 'commentsNumber' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'likesNumber' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [dispatch]",{"range":"241","text":"242"},"Update the dependencies array to be: [artisanProfileState.profile, dispatch]",{"range":"243","text":"244"},"Update the dependencies array to be: [auth.user, profile]",{"range":"245","text":"246"},"Update the dependencies array to be: [dispatch, profileId]",{"range":"247","text":"248"},"Update the dependencies array to be: [dispatch, profile.profile]",{"range":"249","text":"250"},"Update the dependencies array to be: [ProfileArtisan.profile, dispatch]",{"range":"251","text":"252"},"Update the dependencies array to be: [ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.user.job, ProfileArtisan.profile.user.name, ProfileArtisan.profile.user.phone, ProfileArtisan.profile.zipcode, dispatch, userRole]",{"range":"253","text":"254"},"Update the dependencies array to be: [ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.user.job, ProfilePerson.profile.user.name, ProfilePerson.profile.user.phone, ProfilePerson.profile.zipcode, dispatch, userRole]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch, userRole]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [city, dispatch, equipment, job, rate]",{"range":"260","text":"261"},[1012,1014],"[dispatch]",[1158,1187],"[artisanProfileState.profile, dispatch]",[1202,1211],"[auth.user, profile]",[1285,1287],"[dispatch, profileId]",[1407,1424],"[dispatch, profile.profile]",[1270,1294],"[ProfileArtisan.profile, dispatch]",[2646,2648],"[ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.user.job, ProfileArtisan.profile.user.name, ProfileArtisan.profile.user.phone, ProfileArtisan.profile.zipcode, dispatch, userRole]",[3674,3676],"[ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.user.job, ProfilePerson.profile.user.name, ProfilePerson.profile.user.phone, ProfilePerson.profile.zipcode, dispatch, userRole]",[751,753],"[dispatch, userRole]",[870,872],[479,481],"[city, dispatch, equipment, job, rate]"]