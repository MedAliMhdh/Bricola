<<<<<<< HEAD
[{"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\index.js":"1","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\App.js":"2","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\store.js":"3","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanProfile.js":"4","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\VisitedProfile.js":"5","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PersonProfile.js":"6","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Login.js":"7","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteProfile.js":"8","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\utils\\setAuthToken.js":"9","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\auth.js":"10","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\EditProfile.js":"11","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\CreateProfile.js":"12","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\routing\\PrivateRoute.js":"13","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Home.js":"14","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Navb.js":"15","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Register.js":"16","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\index.js":"17","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Spinner.js":"18","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PostCard.js":"19","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\artisanProfile.js":"20","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\post.js":"21","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\personProfile.js":"22","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteButton.js":"23","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\types.js":"24","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\alert.js":"25","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Alert.js":"26","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Profiles.js":"27","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CategoriesCarousel.js":"28","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Search.js":"29","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\alertReducer.js":"30","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\artisanProfileReducer.js":"31","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\personProfileReducer.js":"32","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\postReducer.js":"33","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\authReducer.js":"34","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Thumbs.js":"35","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanCard.js":"36"},{"size":548,"mtime":1613051147710,"results":"37","hashOfConfig":"38"},{"size":2149,"mtime":1613426582284,"results":"39","hashOfConfig":"38"},{"size":399,"mtime":1612703150931,"results":"40","hashOfConfig":"38"},{"size":7593,"mtime":1613680497500,"results":"41","hashOfConfig":"38"},{"size":3635,"mtime":1613658896716,"results":"42","hashOfConfig":"38"},{"size":3871,"mtime":1613658896707,"results":"43","hashOfConfig":"38"},{"size":3462,"mtime":1613337513465,"results":"44","hashOfConfig":"38"},{"size":7702,"mtime":1613658896719,"results":"45","hashOfConfig":"38"},{"size":253,"mtime":1612863972202,"results":"46","hashOfConfig":"38"},{"size":2620,"mtime":1613580555674,"results":"47","hashOfConfig":"38"},{"size":16789,"mtime":1613658896721,"results":"48","hashOfConfig":"38"},{"size":8477,"mtime":1613580555687,"results":"49","hashOfConfig":"38"},{"size":518,"mtime":1612947657486,"results":"50","hashOfConfig":"38"},{"size":1428,"mtime":1613664514734,"results":"51","hashOfConfig":"38"},{"size":3826,"mtime":1613667202751,"results":"52","hashOfConfig":"38"},{"size":7577,"mtime":1613658916475,"results":"53","hashOfConfig":"38"},{"size":477,"mtime":1613337513479,"results":"54","hashOfConfig":"38"},{"size":401,"mtime":1613164517873,"results":"55","hashOfConfig":"38"},{"size":4025,"mtime":1613658896709,"results":"56","hashOfConfig":"38"},{"size":4047,"mtime":1613426582287,"results":"57","hashOfConfig":"38"},{"size":3292,"mtime":1613658896694,"results":"58","hashOfConfig":"38"},{"size":3123,"mtime":1613580555676,"results":"59","hashOfConfig":"38"},{"size":2328,"mtime":1613580555689,"results":"60","hashOfConfig":"38"},{"size":1288,"mtime":1613658896696,"results":"61","hashOfConfig":"38"},{"size":338,"mtime":1612703150920,"results":"62","hashOfConfig":"38"},{"size":421,"mtime":1612783773167,"results":"63","hashOfConfig":"38"},{"size":913,"mtime":1613580555684,"results":"64","hashOfConfig":"38"},{"size":5374,"mtime":1613679607062,"results":"65","hashOfConfig":"38"},{"size":3663,"mtime":1613669057805,"results":"66","hashOfConfig":"38"},{"size":424,"mtime":1612703150928,"results":"67","hashOfConfig":"38"},{"size":1829,"mtime":1613337531168,"results":"68","hashOfConfig":"38"},{"size":946,"mtime":1613426582301,"results":"69","hashOfConfig":"38"},{"size":1738,"mtime":1613658896725,"results":"70","hashOfConfig":"38"},{"size":1090,"mtime":1613658916478,"results":"71","hashOfConfig":"38"},{"size":539,"mtime":1613677466998,"results":"72","hashOfConfig":"38"},{"size":3170,"mtime":1613671435752,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1wsxm8l",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\index.js",[],["153","154"],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\App.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\store.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanProfile.js",["155","156"],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\VisitedProfile.js",["157","158"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProfileById } from \"../actions/artisanProfile\";\r\nimport PostCard from \"./PostCard\";\r\nimport Spinner from \"./Spinner\";\r\nimport { getPosts } from \"../actions/post\";\r\n\r\nconst VisitedProfile = ({ profileId }) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((store) => store.artisan);\r\n  const posts = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileById(profileId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (profile.profile) {\r\n      dispatch(getPosts(profile.profile.user._id));\r\n    }\r\n  }, [profile.profile]);\r\n  return (\r\n    <div>\r\n      {!profile.profile ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={profile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{profile.profile.user.name}</h1>\r\n                  <p>{profile.profile.user.email}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {profile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>: {profile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {profile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {profile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{\" \"}\r\n                      {` ${profile.profile.street}, ${profile.profile.city}, ${profile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{\" \"}\r\n                      {profile.profile.equipment ? \"Yes\" : \"No\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>{profile.profile.bio}</div>\r\n              </div>\r\n              {posts.posts ? (\r\n                posts.posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    photo={profile.profile.user.avatar}\r\n                    fullName={profile.profile.user.name}\r\n                    content={post.text}\r\n                    id={post._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Spinner />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PersonProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Login.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteProfile.js",["159","160"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getArtisanCurrentProfile } from \"../../actions/artisanProfile\";\r\n\r\nimport { getPersonCurrentProfile } from \"../../actions/personProfile\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst ArtisanProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const artisanProfile = useSelector((store) => store.artisan);\r\n  const personProfile = useSelector((store) => store.person);\r\n\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Artisan\") {\r\n      dispatch(getArtisanCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Person\") {\r\n      dispatch(getPersonCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisanProfile.loading && personProfile.loading ? (\r\n        <Spinner />\r\n      ) : artisanProfile.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={artisanProfile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{artisanProfile.profile.user.name}</h1>\r\n                  <p>{artisanProfile.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/artisanprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block text-white active w-100'>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>:{\" \"}\r\n                      {artisanProfile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>:{\" \"}\r\n                      {artisanProfile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {artisanProfile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {artisanProfile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{\" \"}\r\n                      {` ${artisanProfile.profile.street}, ${artisanProfile.profile.city}, ${artisanProfile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{\" \"}\r\n                      {artisanProfile.profile.equipment ? \"Yes\" : \"No\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>\r\n                  {artisanProfile.profile.bio}\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <DeleteButton />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        personProfile.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/'>\r\n                      <img src={personProfile.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{personProfile.profile.user.name}</h1>\r\n                    <p>{personProfile.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/personprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{\" \"}\r\n                        {personProfile.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>: {personProfile.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>: {personProfile.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{\" \"}\r\n                        {`${personProfile.profile.street}, ${personProfile.profile.city}, ${personProfile.profile.zipcode}`}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <DeleteButton />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\auth.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\EditProfile.js",["161","162","163"],"import Spinner from \"../Spinner\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  createArtisanProfile,\r\n  getArtisanCurrentProfile,\r\n} from \"../../actions/artisanProfile\";\r\n\r\nimport {\r\n  createPersonProfile,\r\n  getPersonCurrentProfile,\r\n} from \"../../actions/personProfile\";\r\n\r\nconst EditProfile = () => {\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n  const [city, setCity] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [equipment, setEquipment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const ProfileArtisan = useSelector((state) => state.artisan);\r\n  const ProfilePerson = useSelector((state) => state.person);\r\n\r\n  useEffect(() => {\r\n    if (ProfileArtisan.profile) {\r\n      dispatch(getPosts(ProfileArtisan.profile.user._id));\r\n    }\r\n  }, [ProfileArtisan.profile]);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Artisan\") {\r\n      dispatch(getArtisanCurrentProfile());\r\n      setCity(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.city\r\n          ? \"\"\r\n          : ProfileArtisan.profile.city\r\n      );\r\n      setStreet(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.street\r\n          ? \"\"\r\n          : ProfileArtisan.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.zipcode\r\n          ? \"\"\r\n          : ProfileArtisan.profile.zipcode\r\n      );\r\n      setBio(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.bio\r\n          ? \"\"\r\n          : ProfileArtisan.profile.bio\r\n      );\r\n      setEquipment(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.equipment\r\n          ? \"\"\r\n          : ProfileArtisan.profile.equipment\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Person\") {\r\n      dispatch(getPersonCurrentProfile());\r\n      setCity(\r\n        ProfilePerson.loading || !ProfilePerson.profile.city\r\n          ? \"\"\r\n          : ProfilePerson.profile.city\r\n      );\r\n      setStreet(\r\n        ProfilePerson.loading || !ProfilePerson.profile.street\r\n          ? \"\"\r\n          : ProfilePerson.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfilePerson.loading || !ProfilePerson.profile.zipcode\r\n          ? \"\"\r\n          : ProfilePerson.profile.zipcode\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {ProfilePerson.loading && ProfileArtisan.loading ? (\r\n        <Spinner />\r\n      ) : ProfilePerson.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={ProfilePerson.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{ProfilePerson.profile.user.name}</h1>\r\n                  <p>{ProfilePerson.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/personprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white active w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {ProfilePerson.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {ProfilePerson.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {ProfilePerson.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{\" \"}\r\n                      {`${ProfilePerson.profile.street}, ${ProfilePerson.profile.city}, ${ProfilePerson.profile.zipcode}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form className='form'>\r\n                <div className='form-group'>\r\n                  <select\r\n                    name='city'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n                    <option value=''> * city </option>\r\n                    <option value='Ariana'>Ariana</option>\r\n                    <option value='Beja'>Beja</option>\r\n                    <option value='Ben Arous'>Ben Arous</option>\r\n                    <option value='Bizerte'>Bizerte</option>\r\n                    <option value='Gabes'>Gabes </option>\r\n                    <option value='Gafsa'>Gafsa</option>\r\n                    <option value='Jendouba'>Jendouba</option>\r\n                    <option value='Kairouane'>Kairouane</option>\r\n                    <option value='Kasserine'>Kasserine</option>\r\n                    <option value='kébili'>kébili</option>\r\n                    <option value='Kef'>Kef</option>\r\n                    <option value='Mahdia'>Mahdia</option>\r\n                    <option value='Manouba'>Manouba</option>\r\n                    <option value='Médenine'>Médenine</option>\r\n                    <option value='Monastir'>Monastir</option>\r\n                    <option value='Nabeul'>Nabeul</option>\r\n                    <option value='Sfax'>Sfax</option>\r\n                    <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                    <option value='Siliana'>Siliana</option>\r\n                    <option value='Sousse'>Sousse</option>\r\n                    <option value='Tataouine'>Tataouine</option>\r\n                    <option value='Tozeur'>Tozeur</option>\r\n                    <option value='Tunis'>Tunis</option>\r\n                    <option value='Zaghouane'>Zaghouane</option>\r\n                  </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='Street'\r\n                    name='street'\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='number'\r\n                    placeholder='Zipcode'\r\n                    name='zipcode'\r\n                    value={zipcode}\r\n                    onChange={(e) => setZipcode(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to='/artisanprofile/me'>\r\n                  <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        createPersonProfile(\r\n                          { city, street, zipcode },\r\n                          history,\r\n                          true\r\n                        )\r\n                      );\r\n                    }}\r\n                    type='submit'\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ProfileArtisan.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/'>\r\n                      <img src={ProfileArtisan.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{ProfileArtisan.profile.user.name}</h1>\r\n                    <p>{ProfileArtisan.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/artisanprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{\" \"}\r\n                        {ProfileArtisan.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Profession </span>:{\" \"}\r\n                        {ProfileArtisan.profile.user.job}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>:{\" \"}\r\n                        {ProfileArtisan.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>:{\" \"}\r\n                        {ProfileArtisan.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{\" \"}\r\n                        {` ${ProfileArtisan.profile.street}, ${ProfileArtisan.profile.city}, ${ProfileArtisan.profile.zipcode} `}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Equipments </span>:{\" \"}\r\n                        {ProfileArtisan.profile.equipment ? \"Yes\" : \"No\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <div className='bio-graph-heading'>\r\n                    {ProfileArtisan.profile.bio}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <form className='form'>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        name='city'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      >\r\n                        <option value=''> * city </option>\r\n                        <option value='Ariana'>Ariana</option>\r\n                        <option value='Beja'>Beja</option>\r\n                        <option value='Ben Arous'>Ben Arous</option>\r\n                        <option value='Bizerte'>Bizerte</option>\r\n                        <option value='Gabes'>Gabes </option>\r\n                        <option value='Gafsa'>Gafsa</option>\r\n                        <option value='Jendouba'>Jendouba</option>\r\n                        <option value='Kairouane'>Kairouane</option>\r\n                        <option value='Kasserine'>Kasserine</option>\r\n                        <option value='kébili'>kébili</option>\r\n                        <option value='Kef'>Kef</option>\r\n                        <option value='Mahdia'>Mahdia</option>\r\n                        <option value='Manouba'>Manouba</option>\r\n                        <option value='Médenine'>Médenine</option>\r\n                        <option value='Monastir'>Monastir</option>\r\n                        <option value='Nabeul'>Nabeul</option>\r\n                        <option value='Sfax'>Sfax</option>\r\n                        <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                        <option value='Siliana'>Siliana</option>\r\n                        <option value='Sousse'>Sousse</option>\r\n                        <option value='Tataouine'>Tataouine</option>\r\n                        <option value='Tozeur'>Tozeur</option>\r\n                        <option value='Tunis'>Tunis</option>\r\n                        <option value='Zaghouane'>Zaghouane</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Street'\r\n                        name='street'\r\n                        value={street}\r\n                        onChange={(e) => setStreet(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='number'\r\n                        placeholder='Zipcode'\r\n                        name='zipcode'\r\n                        value={zipcode}\r\n                        onChange={(e) => setZipcode(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        type='boolean'\r\n                        name='equipment'\r\n                        value={equipment}\r\n                        onChange={(e) => setEquipment(e.target.value)}\r\n                      >\r\n                        <option value=''> equipment </option>\r\n                        <option value='true'>With equipment</option>\r\n                        <option value='false'>Without equipment</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                    <Link to='/artisanprofile/me'>\r\n                      <button\r\n                        className='btn btn-primary'\r\n                        onClick={() => {\r\n                          dispatch(\r\n                            createArtisanProfile(\r\n                              { city, street, zipcode, bio, equipment },\r\n                              history,\r\n                              true\r\n                            )\r\n                          );\r\n                        }}\r\n                        type='submit'\r\n                      >\r\n                        Save changes\r\n                      </button>\r\n                    </Link>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Home.js",["164"],"import React, { useState, useEffect } from \"react\";\r\nimport Navb from \"./Navb\";\r\nimport Search from \"./Search\";\r\nimport CategoriesCarousel from \"./CategoriesCarousel\";\r\nimport Profiles from \"./Profiles\";\r\nconst Home = () => {\r\n  const [search, setSearch] = useState(false);\r\n  const [rate, setRate] = useState(0);\r\n  const [job, setJob] = useState(\"\");\r\n  const [equipment, setEquipment] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  return (\r\n    <div className='container-fluid mx-0 px-0'>\r\n      <Navb />\r\n      <Search\r\n        setSearch={setSearch}\r\n        rate={rate}\r\n        setRate={setRate}\r\n        job={job}\r\n        setJob={setJob}\r\n        equipment={equipment}\r\n        setEquipment={setEquipment}\r\n        city={city}\r\n        setCity={setCity}\r\n      />\r\n      {search ? (\r\n        <Profiles rate={rate} job={job} equipment={equipment} city={city} />\r\n      ) : (\r\n        <CategoriesCarousel setSearch={setSearch} setJob={setJob} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// function useStickyState(defaultValue, key) {\r\n//   const [value, setValue] = useState(() => {\r\n//     const stickyValue = window.localStorage.getItem(key);\r\n//     return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     window.localStorage.setItem(key, JSON.stringify(value));\r\n//   }, [key, value]);\r\n//   return [value, setValue];\r\n// }\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Navb.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Register.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\index.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Spinner.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\PostCard.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\artisanProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\post.js",["165","166"],"import axios from \"axios\";\r\nimport {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n//Get posts\r\nexport const getPosts = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}api/posts/user/${userId}`\r\n    );\r\n\r\n    dispatch({ type: GET_POSTS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/posts`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Post added\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Likes\r\nexport const updateLikes = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_API_URL}api/posts/like/${postId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postId, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_API_URL}api/posts/${postId}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: postId,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Comment\r\nexport const addComment = ({ postId, formData }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/posts/comment/${postId}`,\r\n      { text: formData },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment added\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_API_URL}api/posts/comment/${postId}/${commentId}`\r\n    );\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert(\"Comment deleted\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\personProfile.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\profile-forms\\DeleteButton.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\types.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\actions\\alert.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Alert.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Profiles.js",["167"],"import React, { useEffect } from 'react';\r\nimport Spinner from './Spinner';\r\nimport ArtisanCard from './ArtisanCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterProfiles } from '../actions/artisanProfile';\r\n\r\nconst Profiles = ({ rate, job, equipment, city }) => {\r\n  const artisan = useSelector((state) => state.artisan);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterProfiles({ job, equipment, city, rate }));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisan.loading || !artisan.profiles ? (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      ) : artisan.profiles ? (\r\n        <div>\r\n          {artisan.profiles.map((artisan) => (\r\n            <ArtisanCard key={artisan._id} artisan={artisan} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h1>No profiles found</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\CategoriesCarousel.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Search.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\alertReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\artisanProfileReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\personProfileReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\postReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\Thumbs.js",[],"C:\\Users\\med_a\\Desktop\\GoMyCode\\P_GoMyCode\\App\\client\\src\\components\\ArtisanCard.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":18,"column":6,"nodeType":"174","endLine":18,"endColumn":8,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"173","line":24,"column":6,"nodeType":"174","endLine":24,"endColumn":35,"suggestions":"176"},{"ruleId":"172","severity":1,"message":"177","line":16,"column":6,"nodeType":"174","endLine":16,"endColumn":8,"suggestions":"178"},{"ruleId":"172","severity":1,"message":"173","line":22,"column":6,"nodeType":"174","endLine":22,"endColumn":23,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"180","line":22,"column":6,"nodeType":"174","endLine":22,"endColumn":8,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"180","line":28,"column":6,"nodeType":"174","endLine":28,"endColumn":8,"suggestions":"182"},{"ruleId":"172","severity":1,"message":"173","line":34,"column":6,"nodeType":"174","endLine":34,"endColumn":30,"suggestions":"183"},{"ruleId":"172","severity":1,"message":"184","line":65,"column":6,"nodeType":"174","endLine":65,"endColumn":8,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":86,"column":6,"nodeType":"174","endLine":86,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"192","line":78,"column":11,"nodeType":"190","messageId":"191","endLine":78,"endColumn":14},{"ruleId":"188","severity":1,"message":"192","line":127,"column":11,"nodeType":"190","messageId":"191","endLine":127,"endColumn":14},{"ruleId":"172","severity":1,"message":"193","line":13,"column":6,"nodeType":"174","endLine":13,"endColumn":8,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["197"],["198"],"React Hook useEffect has missing dependencies: 'dispatch' and 'profileId'. Either include them or remove the dependency array.",["199"],["200"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userRole'. Either include them or remove the dependency array.",["201"],["202"],["203"],"React Hook useEffect has missing dependencies: 'ProfileArtisan.loading', 'ProfileArtisan.profile.bio', 'ProfileArtisan.profile.city', 'ProfileArtisan.profile.equipment', 'ProfileArtisan.profile.street', 'ProfileArtisan.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'ProfilePerson.loading', 'ProfilePerson.profile.city', 'ProfilePerson.profile.street', 'ProfilePerson.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["205"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city', 'dispatch', 'equipment', 'job', and 'rate'. Either include them or remove the dependency array.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [dispatch]",{"range":"226","text":"227"},"Update the dependencies array to be: [artisanProfileState.profile, dispatch]",{"range":"228","text":"229"},"Update the dependencies array to be: [dispatch, profileId]",{"range":"230","text":"231"},"Update the dependencies array to be: [dispatch, profile.profile]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch, userRole]",{"range":"234","text":"235"},{"range":"236","text":"235"},"Update the dependencies array to be: [ProfileArtisan.profile, dispatch]",{"range":"237","text":"238"},"Update the dependencies array to be: [ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.zipcode, dispatch, userRole]",{"range":"239","text":"240"},"Update the dependencies array to be: [ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.zipcode, dispatch, userRole]",{"range":"241","text":"242"},"Update the dependencies array to be: [city, dispatch, equipment, job, rate]",{"range":"243","text":"244"},[703,705],"[dispatch]",[849,878],"[artisanProfileState.profile, dispatch]",[581,583],"[dispatch, profileId]",[703,720],"[dispatch, profile.profile]",[751,753],"[dispatch, userRole]",[870,872],[1097,1121],"[ProfileArtisan.profile, dispatch]",[2002,2004],"[ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.zipcode, dispatch, userRole]",[2568,2570],"[ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.zipcode, dispatch, userRole]",[479,481],"[city, dispatch, equipment, job, rate]"]
=======
[{"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\index.js":"1","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\App.js":"2","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\store.js":"3","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Home.js":"4","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Login.js":"5","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Register.js":"6","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Navb.js":"7","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\CreateProfile.js":"8","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\auth.js":"9","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\routing\\PrivateRoute.js":"11","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\PersonProfile.js":"12","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\ArtisanProfile.js":"13","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\DeleteProfile.js":"14","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\EditProfile.js":"15","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\VisitedProfile.js":"16","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\index.js":"17","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Profiles.js":"18","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\alert.js":"19","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\CategoriesCarousel.js":"20","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Alert.js":"21","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\artisanProfile.js":"22","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\personProfile.js":"23","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Search.js":"24","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\types.js":"25","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Spinner.js":"26","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\post.js":"27","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\PostCard.js":"28","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\DeleteButton.js":"29","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\authReducer.js":"30","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\alertReducer.js":"31","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\artisanProfileReducer.js":"32","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\personProfileReducer.js":"33","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\ArtisanCard.js":"34","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Thumbs.js":"35","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\postReducer.js":"36","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\CommentCard.js":"37"},{"size":548,"mtime":1613051300265,"results":"38","hashOfConfig":"39"},{"size":2149,"mtime":1613484432152,"results":"40","hashOfConfig":"39"},{"size":399,"mtime":1612655606494,"results":"41","hashOfConfig":"39"},{"size":1428,"mtime":1613656180018,"results":"42","hashOfConfig":"39"},{"size":3462,"mtime":1613338539265,"results":"43","hashOfConfig":"39"},{"size":7577,"mtime":1613656167661,"results":"44","hashOfConfig":"39"},{"size":3692,"mtime":1613677633680,"results":"45","hashOfConfig":"39"},{"size":8477,"mtime":1613656167698,"results":"46","hashOfConfig":"39"},{"size":3057,"mtime":1613673703404,"results":"47","hashOfConfig":"39"},{"size":253,"mtime":1612826907260,"results":"48","hashOfConfig":"39"},{"size":518,"mtime":1613051257435,"results":"49","hashOfConfig":"39"},{"size":3871,"mtime":1613656194666,"results":"50","hashOfConfig":"39"},{"size":7329,"mtime":1613668917336,"results":"51","hashOfConfig":"39"},{"size":7702,"mtime":1613656194671,"results":"52","hashOfConfig":"39"},{"size":21210,"mtime":1613675129063,"results":"53","hashOfConfig":"39"},{"size":3723,"mtime":1613660667110,"results":"54","hashOfConfig":"39"},{"size":477,"mtime":1613338539286,"results":"55","hashOfConfig":"39"},{"size":913,"mtime":1613656167640,"results":"56","hashOfConfig":"39"},{"size":338,"mtime":1612728043231,"results":"57","hashOfConfig":"39"},{"size":5394,"mtime":1613656167458,"results":"58","hashOfConfig":"39"},{"size":421,"mtime":1612783474119,"results":"59","hashOfConfig":"39"},{"size":4047,"mtime":1613670848259,"results":"60","hashOfConfig":"39"},{"size":3123,"mtime":1613656167403,"results":"61","hashOfConfig":"39"},{"size":3656,"mtime":1613656194668,"results":"62","hashOfConfig":"39"},{"size":1331,"mtime":1613673570582,"results":"63","hashOfConfig":"39"},{"size":401,"mtime":1613051300263,"results":"64","hashOfConfig":"39"},{"size":3322,"mtime":1613665668569,"results":"65","hashOfConfig":"39"},{"size":5220,"mtime":1613678267513,"results":"66","hashOfConfig":"39"},{"size":2328,"mtime":1613656194670,"results":"67","hashOfConfig":"39"},{"size":1129,"mtime":1613673656309,"results":"68","hashOfConfig":"39"},{"size":424,"mtime":1612655606492,"results":"69","hashOfConfig":"39"},{"size":1829,"mtime":1613338522517,"results":"70","hashOfConfig":"39"},{"size":946,"mtime":1613484432190,"results":"71","hashOfConfig":"39"},{"size":3139,"mtime":1613675592638,"results":"72","hashOfConfig":"39"},{"size":539,"mtime":1613484460349,"results":"73","hashOfConfig":"39"},{"size":1878,"mtime":1613667239963,"results":"74","hashOfConfig":"39"},{"size":1498,"mtime":1613675324403,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1hijqhf",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\index.js",[],["159","160"],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\App.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\store.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Home.js",["161"],"import React, { useState, useEffect } from 'react';\r\nimport Navb from './Navb';\r\nimport Search from './Search';\r\nimport CategoriesCarousel from './CategoriesCarousel';\r\nimport Profiles from './Profiles';\r\nconst Home = () => {\r\n  const [search, setSearch] = useState(false);\r\n  const [rate, setRate] = useState(0);\r\n  const [job, setJob] = useState('');\r\n  const [equipment, setEquipment] = useState('');\r\n  const [city, setCity] = useState('');\r\n\r\n  return (\r\n    <div className='container-fluid mx-0 px-0'>\r\n      <Navb />\r\n      <Search\r\n        setSearch={setSearch}\r\n        rate={rate}\r\n        setRate={setRate}\r\n        job={job}\r\n        setJob={setJob}\r\n        equipment={equipment}\r\n        setEquipment={setEquipment}\r\n        city={city}\r\n        setCity={setCity}\r\n      />\r\n      {search ? (\r\n        <Profiles rate={rate} job={job} equipment={equipment} city={city} />\r\n      ) : (\r\n        <CategoriesCarousel setSearch={setSearch} setJob={setJob} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// function useStickyState(defaultValue, key) {\r\n//   const [value, setValue] = useState(() => {\r\n//     const stickyValue = window.localStorage.getItem(key);\r\n//     return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     window.localStorage.setItem(key, JSON.stringify(value));\r\n//   }, [key, value]);\r\n//   return [value, setValue];\r\n// }\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Login.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Register.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Navb.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\auth.js",["162"],"import axios from 'axios';\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOG_OUT,\r\n  CLEAR_PROFILE,\r\n  CLEAR_PERSON_PROFILE,\r\n  UPDATE_FAIL,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}api/auth`);\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (\r\n  { name, email, password, role, job, phone },\r\n  history\r\n) => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  const config = {\r\n    header: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = { name, email, password, role, job, phone };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/user`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n\r\n    if (role === 'Artisan') {\r\n      history.push('/artisanprofile/me');\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        dispatch(setAlert({ msg: error.msg, alertType: 'danger' }));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  const config = {\r\n    header: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/auth`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => {\r\n        dispatch(setAlert({ msg: error.msg, alertType: 'danger' }));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Log out user/ clear profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: CLEAR_PERSON_PROFILE });\r\n  dispatch({ type: LOG_OUT });\r\n};\r\n\r\n// Update user\r\nexport const updateUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_API_URL}api/user/update`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({ type: UPDATE_FAIL });\r\n  }\r\n};\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\PersonProfile.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\ArtisanProfile.js",["163","164"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getArtisanCurrentProfile } from '../actions/artisanProfile';\r\nimport Spinner from './Spinner';\r\nimport PostCard from './PostCard';\r\nimport { getPosts, addPost } from '../actions/post';\r\n\r\nconst ArtisanProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const artisanProfileState = useSelector((store) => store.artisan);\r\n  const posts = useSelector((state) => state.post);\r\n  const auth = useSelector((store) => store.auth);\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getArtisanCurrentProfile());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (artisanProfileState.profile) {\r\n      dispatch(getPosts(artisanProfileState.profile.user._id));\r\n    }\r\n  }, [artisanProfileState.profile]);\r\n\r\n  return (\r\n    <div>\r\n      {artisanProfileState.loading && !artisanProfileState.profile ? (\r\n        <Spinner />\r\n      ) : !artisanProfileState.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <p>\r\n            <i className='fas fa user' /> Welcome {auth.user && auth.user.name}\r\n          </p>\r\n          <p>You have not yet a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create profile\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={artisanProfileState.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{artisanProfileState.profile.user.name}</h1>\r\n                  <p>{artisanProfileState.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white active w-100'>\r\n                    <Link className='nav-link' to='/artisanprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>:{' '}\r\n                      {artisanProfileState.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>:{' '}\r\n                      {artisanProfileState.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>:{' '}\r\n                      {artisanProfileState.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>:{' '}\r\n                      {artisanProfileState.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {` ${artisanProfileState.profile.street}, ${artisanProfileState.profile.city}, ${artisanProfileState.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{' '}\r\n                      {artisanProfileState.profile.equipment ? 'Yes' : 'No'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>\r\n                  {artisanProfileState.profile.bio}\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <form>\r\n                  <textarea\r\n                    placeholder='Whats in your mind today?'\r\n                    rows='2'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    className='form-control input-lg p-text-area'\r\n                  ></textarea>\r\n                </form>\r\n                <footer className='panel-footer d-flex flex-row-reverse justify-content-between align-items-center'>\r\n                  <button\r\n                    className='btn btn-warning'\r\n                    onClick={() => {\r\n                      dispatch(addPost({ text }));\r\n                      setText('');\r\n                    }}\r\n                  >\r\n                    Post\r\n                  </button>\r\n                  <ul className='nav nav-pills'>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <i className='fa fa-map-marker mx-1'></i>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <i className='fa fa-camera mx-1'></i>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <i className=' fa fa-film mx-1'></i>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to='/'>\r\n                        <i className='fa fa-microphone mx-1'></i>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </footer>\r\n              </div>\r\n              {posts.posts ? (\r\n                posts.posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    photo={post.avatar}\r\n                    fullName={post.name}\r\n                    content={post.text}\r\n                    comments={post.comments}\r\n                    likes={post.likes}\r\n                    id={post._id}\r\n                    userId={post.user}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Spinner />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanProfile;\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\DeleteProfile.js",["165","166"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getArtisanCurrentProfile } from \"../../actions/artisanProfile\";\r\n\r\nimport { getPersonCurrentProfile } from \"../../actions/personProfile\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst ArtisanProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const artisanProfile = useSelector((store) => store.artisan);\r\n  const personProfile = useSelector((store) => store.person);\r\n\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Artisan\") {\r\n      dispatch(getArtisanCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Person\") {\r\n      dispatch(getPersonCurrentProfile());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisanProfile.loading && personProfile.loading ? (\r\n        <Spinner />\r\n      ) : artisanProfile.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={artisanProfile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{artisanProfile.profile.user.name}</h1>\r\n                  <p>{artisanProfile.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/artisanprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block text-white active w-100'>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>:{\" \"}\r\n                      {artisanProfile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>:{\" \"}\r\n                      {artisanProfile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {artisanProfile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {artisanProfile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{\" \"}\r\n                      {` ${artisanProfile.profile.street}, ${artisanProfile.profile.city}, ${artisanProfile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{\" \"}\r\n                      {artisanProfile.profile.equipment ? \"Yes\" : \"No\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>\r\n                  {artisanProfile.profile.bio}\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <DeleteButton />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        personProfile.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/'>\r\n                      <img src={personProfile.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{personProfile.profile.user.name}</h1>\r\n                    <p>{personProfile.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/personprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{\" \"}\r\n                        {personProfile.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>: {personProfile.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>: {personProfile.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{\" \"}\r\n                        {`${personProfile.profile.street}, ${personProfile.profile.city}, ${personProfile.profile.zipcode}`}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <DeleteButton />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtisanProfile;\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\EditProfile.js",["167","168","169","170"],"import Spinner from '../Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateUser } from '../../actions/auth';\r\nimport {\r\n  createArtisanProfile,\r\n  getArtisanCurrentProfile,\r\n} from '../../actions/artisanProfile';\r\n\r\nimport {\r\n  createPersonProfile,\r\n  getPersonCurrentProfile,\r\n} from '../../actions/personProfile';\r\n\r\nconst EditProfile = () => {\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n  const [city, setCity] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [equipment, setEquipment] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [job, setJob] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const ProfileArtisan = useSelector((state) => state.artisan);\r\n  const ProfilePerson = useSelector((state) => state.person);\r\n\r\n  useEffect(() => {\r\n    if (ProfileArtisan.profile) {\r\n      dispatch(getPosts(ProfileArtisan.profile.user._id));\r\n    }\r\n  }, [ProfileArtisan.profile]);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Artisan') {\r\n      dispatch(getArtisanCurrentProfile());\r\n      setCity(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.city\r\n          ? ''\r\n          : ProfileArtisan.profile.city\r\n      );\r\n      setStreet(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.street\r\n          ? ''\r\n          : ProfileArtisan.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.zipcode\r\n          ? ''\r\n          : ProfileArtisan.profile.zipcode\r\n      );\r\n      setBio(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.bio\r\n          ? ''\r\n          : ProfileArtisan.profile.bio\r\n      );\r\n      setEquipment(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.equipment\r\n          ? ''\r\n          : ProfileArtisan.profile.equipment\r\n      );\r\n      setName(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.name\r\n          ? ''\r\n          : ProfileArtisan.profile.user.name\r\n      );\r\n      setPhone(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.phone\r\n          ? ''\r\n          : ProfileArtisan.profile.user.phone\r\n      );\r\n      setJob(\r\n        ProfileArtisan.loading || !ProfileArtisan.profile.user.job\r\n          ? ''\r\n          : ProfileArtisan.profile.user.job\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userRole === 'Person') {\r\n      dispatch(getPersonCurrentProfile());\r\n      setCity(\r\n        ProfilePerson.loading || !ProfilePerson.profile.city\r\n          ? ''\r\n          : ProfilePerson.profile.city\r\n      );\r\n      setStreet(\r\n        ProfilePerson.loading || !ProfilePerson.profile.street\r\n          ? ''\r\n          : ProfilePerson.profile.street\r\n      );\r\n      setZipcode(\r\n        ProfilePerson.loading || !ProfilePerson.profile.zipcode\r\n          ? ''\r\n          : ProfilePerson.profile.zipcode\r\n      );\r\n      setName(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.name\r\n          ? ''\r\n          : ProfilePerson.profile.user.name\r\n      );\r\n      setPhone(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.phone\r\n          ? ''\r\n          : ProfilePerson.profile.user.phone\r\n      );\r\n      setJob(\r\n        ProfilePerson.loading || !ProfilePerson.profile.user.job\r\n          ? ''\r\n          : ProfilePerson.profile.user.job\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {ProfilePerson.loading && ProfileArtisan.loading ? (\r\n        <Spinner />\r\n      ) : ProfilePerson.profile ? (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={ProfilePerson.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{ProfilePerson.profile.user.name}</h1>\r\n                  <p>{ProfilePerson.profile.user.email}</p>\r\n                </div>\r\n\r\n                <ul className='nav nav-pills nav-stacked '>\r\n                  <li className='nav-item d-block text-white w-100'>\r\n                    <Link className='nav-link' to='/personprofile/me'>\r\n                      <i className='fa fa-user'></i> Profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white active w-100 '>\r\n                    <Link className='nav-link' to='/edit-profile'>\r\n                      <i className='fa fa-edit'></i> Edit profile\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item d-block  text-white w-100 '>\r\n                    <Link className='nav-link' to='/delete-profile'>\r\n                      <i className='fas fa-trash-alt'></i> Delete profile\r\n                      <span className='label label-warning r-activity'></span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {ProfilePerson.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {ProfilePerson.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {ProfilePerson.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {`${ProfilePerson.profile.street}, ${ProfilePerson.profile.city}, ${ProfilePerson.profile.zipcode}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form className='form'>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    name='job'\r\n                    value={job}\r\n                    onChange={(e) => setJob(e.target.value)}\r\n                  >\r\n                    <option value='select'> Select job type *</option>\r\n                    <option value='Bricklayer'>Bricklayer</option>\r\n                    <option value='Electrician'>Electrician</option>\r\n                    <option value='Painter'>Painter</option>\r\n                    <option value='Plumber'>Plumber</option>\r\n                    <option value='Mechanic'>Mechanic </option>\r\n                    <option value='Welder'>Welder</option>\r\n                    <option value='Carpenter'>Carpenter</option>\r\n                    <option value='Architect'>Architect</option>\r\n                  </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    name='city'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n                    <option value=''> * city </option>\r\n                    <option value='Ariana'>Ariana</option>\r\n                    <option value='Beja'>Beja</option>\r\n                    <option value='Ben Arous'>Ben Arous</option>\r\n                    <option value='Bizerte'>Bizerte</option>\r\n                    <option value='Gabes'>Gabes </option>\r\n                    <option value='Gafsa'>Gafsa</option>\r\n                    <option value='Jendouba'>Jendouba</option>\r\n                    <option value='Kairouane'>Kairouane</option>\r\n                    <option value='Kasserine'>Kasserine</option>\r\n                    <option value='kébili'>kébili</option>\r\n                    <option value='Kef'>Kef</option>\r\n                    <option value='Mahdia'>Mahdia</option>\r\n                    <option value='Manouba'>Manouba</option>\r\n                    <option value='Médenine'>Médenine</option>\r\n                    <option value='Monastir'>Monastir</option>\r\n                    <option value='Nabeul'>Nabeul</option>\r\n                    <option value='Sfax'>Sfax</option>\r\n                    <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                    <option value='Siliana'>Siliana</option>\r\n                    <option value='Sousse'>Sousse</option>\r\n                    <option value='Tataouine'>Tataouine</option>\r\n                    <option value='Tozeur'>Tozeur</option>\r\n                    <option value='Tunis'>Tunis</option>\r\n                    <option value='Zaghouane'>Zaghouane</option>\r\n                  </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='Street'\r\n                    name='street'\r\n                    value={street}\r\n                    onChange={(e) => setStreet(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='number'\r\n                    placeholder='Zipcode'\r\n                    name='zipcode'\r\n                    value={zipcode}\r\n                    onChange={(e) => setZipcode(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='number'\r\n                    placeholder='Phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to='/artisanprofile/me'>\r\n                  <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        createPersonProfile(\r\n                          { city, street, zipcode, phone },\r\n                          history,\r\n                          true\r\n                        )\r\n                      );\r\n                      //dispatch(updateUser({ name, job, phone }));\r\n                    }}\r\n                    type='submit'\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ProfileArtisan.profile && (\r\n          <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n            <div className='row'>\r\n              <div className='profile-nav col-lg-3'>\r\n                <div className='panel'>\r\n                  <div className='user-heading round'>\r\n                    <Link to='/'>\r\n                      <img src={ProfileArtisan.profile.user.avatar} alt='' />\r\n                    </Link>\r\n                    <h1>{ProfileArtisan.profile.user.name}</h1>\r\n                    <p>{ProfileArtisan.profile.user.email}</p>\r\n                  </div>\r\n\r\n                  <ul className='nav nav-pills nav-stacked '>\r\n                    <li className='nav-item d-block text-white w-100'>\r\n                      <Link className='nav-link' to='/artisanprofile/me'>\r\n                        <i className='fa fa-user'></i> Profile\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item d-block  text-white active w-100 '>\r\n                      <Link className='nav-link' to='/edit-profile'>\r\n                        <i className='fa fa-edit'></i> Edit profile\r\n                      </Link>\r\n                    </li>\r\n                    <li className='nav-item d-block  text-white w-100 '>\r\n                      <Link className='nav-link' to='/delete-profile'>\r\n                        <i className='fas fa-trash-alt'></i> Delete profile\r\n                        <span className='label label-warning r-activity'></span>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='profile-info col-lg-9'>\r\n                <div className='panel-body bio-graph-info'>\r\n                  <h1>About</h1>\r\n                  <div className='row'>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Full Name </span>:{' '}\r\n                        {ProfileArtisan.profile.user.name}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Profession </span>:{' '}\r\n                        {ProfileArtisan.profile.user.job}\r\n                      </p>\r\n                    </div>\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Mobile </span>:{' '}\r\n                        {ProfileArtisan.profile.user.phone}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>E-mail </span>:{' '}\r\n                        {ProfileArtisan.profile.user.email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Address </span>:{' '}\r\n                        {` ${ProfileArtisan.profile.street}, ${ProfileArtisan.profile.city}, ${ProfileArtisan.profile.zipcode} `}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='bio-row'>\r\n                      <p>\r\n                        <span>Equipments </span>:{' '}\r\n                        {ProfileArtisan.profile.equipment ? 'Yes' : 'No'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='panel'>\r\n                  <div className='bio-graph-heading'>\r\n                    {ProfileArtisan.profile.bio}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <form className='form'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        name='job'\r\n                        value={job}\r\n                        onChange={(e) => setJob(e.target.value)}\r\n                      >\r\n                        <option value='select'> Select job type *</option>\r\n                        <option value='Bricklayer'>Bricklayer</option>\r\n                        <option value='Electrician'>Electrician</option>\r\n                        <option value='Painter'>Painter</option>\r\n                        <option value='Plumber'>Plumber</option>\r\n                        <option value='Mechanic'>Mechanic </option>\r\n                        <option value='Welder'>Welder</option>\r\n                        <option value='Carpenter'>Carpenter</option>\r\n                        <option value='Architect'>Architect</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        name='city'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      >\r\n                        <option value=''> * city </option>\r\n                        <option value='Ariana'>Ariana</option>\r\n                        <option value='Beja'>Beja</option>\r\n                        <option value='Ben Arous'>Ben Arous</option>\r\n                        <option value='Bizerte'>Bizerte</option>\r\n                        <option value='Gabes'>Gabes </option>\r\n                        <option value='Gafsa'>Gafsa</option>\r\n                        <option value='Jendouba'>Jendouba</option>\r\n                        <option value='Kairouane'>Kairouane</option>\r\n                        <option value='Kasserine'>Kasserine</option>\r\n                        <option value='kébili'>kébili</option>\r\n                        <option value='Kef'>Kef</option>\r\n                        <option value='Mahdia'>Mahdia</option>\r\n                        <option value='Manouba'>Manouba</option>\r\n                        <option value='Médenine'>Médenine</option>\r\n                        <option value='Monastir'>Monastir</option>\r\n                        <option value='Nabeul'>Nabeul</option>\r\n                        <option value='Sfax'>Sfax</option>\r\n                        <option value='Sidi bouzid'>Sidi bouzid</option>\r\n                        <option value='Siliana'>Siliana</option>\r\n                        <option value='Sousse'>Sousse</option>\r\n                        <option value='Tataouine'>Tataouine</option>\r\n                        <option value='Tozeur'>Tozeur</option>\r\n                        <option value='Tunis'>Tunis</option>\r\n                        <option value='Zaghouane'>Zaghouane</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Street'\r\n                        name='street'\r\n                        value={street}\r\n                        onChange={(e) => setStreet(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='number'\r\n                        placeholder='Zipcode'\r\n                        name='zipcode'\r\n                        value={zipcode}\r\n                        onChange={(e) => setZipcode(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='number'\r\n                        placeholder='Phone'\r\n                        name='phone'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <select\r\n                        type='boolean'\r\n                        name='equipment'\r\n                        value={equipment}\r\n                        onChange={(e) => setEquipment(e.target.value)}\r\n                      >\r\n                        <option value=''> equipment </option>\r\n                        <option value='true'>With equipment</option>\r\n                        <option value='false'>Without equipment</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                    <Link to='/artisanprofile/me'>\r\n                      <button\r\n                        className='btn btn-primary'\r\n                        onClick={() => {\r\n                          dispatch(\r\n                            createArtisanProfile(\r\n                              { city, street, zipcode, bio, equipment },\r\n                              history,\r\n                              true\r\n                            )\r\n                          );\r\n                          //dispatch(updateUser({ name, job, phone }));\r\n                        }}\r\n                        type='submit'\r\n                      >\r\n                        Save changes\r\n                      </button>\r\n                    </Link>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\VisitedProfile.js",["171","172"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileById } from '../actions/artisanProfile';\r\nimport PostCard from './PostCard';\r\nimport Spinner from './Spinner';\r\nimport { getPosts } from '../actions/post';\r\n\r\nconst VisitedProfile = ({ profileId }) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((store) => store.artisan);\r\n  const posts = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileById(profileId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (profile.profile) {\r\n      dispatch(getPosts(profile.profile.user._id));\r\n    }\r\n  }, [profile.profile]);\r\n\r\n  return (\r\n    <div>\r\n      {!profile.profile ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='container artisanProfileContainer bootstrap snippets bootdey'>\r\n          <div className='row'>\r\n            <div className='profile-nav col-lg-3'>\r\n              <div className='panel'>\r\n                <div className='user-heading round'>\r\n                  <Link to='/'>\r\n                    <img src={profile.profile.user.avatar} alt='' />\r\n                  </Link>\r\n                  <h1>{profile.profile.user.name}</h1>\r\n                  <p>{profile.profile.user.email}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='profile-info col-lg-9'>\r\n              <div className='panel-body bio-graph-info'>\r\n                <h1>About</h1>\r\n                <div className='row'>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Full Name </span>: {profile.profile.user.name}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Profession </span>: {profile.profile.user.job}\r\n                    </p>\r\n                  </div>\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Mobile </span>: {profile.profile.user.phone}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>E-mail </span>: {profile.profile.user.email}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Address </span>:{' '}\r\n                      {` ${profile.profile.street}, ${profile.profile.city}, ${profile.profile.zipcode} `}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='bio-row'>\r\n                    <p>\r\n                      <span>Equipments </span>:{' '}\r\n                      {profile.profile.equipment ? 'Yes' : 'No'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='panel'>\r\n                <div className='bio-graph-heading'>{profile.profile.bio}</div>\r\n              </div>\r\n              {posts.posts ? (\r\n                posts.posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    photo={profile.profile.user.avatar}\r\n                    fullName={profile.profile.user.name}\r\n                    content={post.text}\r\n                    comments={post.comments}\r\n                    likes={post.likes}\r\n                    id={post._id}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Spinner />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisitedProfile;\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\index.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Profiles.js",["173"],"import React, { useEffect } from 'react';\r\nimport Spinner from './Spinner';\r\nimport ArtisanCard from './ArtisanCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterProfiles } from '../actions/artisanProfile';\r\n\r\nconst Profiles = ({ rate, job, equipment, city }) => {\r\n  const artisan = useSelector((state) => state.artisan);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterProfiles({ job, equipment, city, rate }));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {artisan.loading || !artisan.profiles ? (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      ) : artisan.profiles ? (\r\n        <div>\r\n          {artisan.profiles.map((artisan) => (\r\n            <ArtisanCard key={artisan._id} artisan={artisan} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h1>No profiles found</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\alert.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\CategoriesCarousel.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Alert.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\artisanProfile.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\personProfile.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Search.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\types.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Spinner.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\actions\\post.js",["174"],"import axios from 'axios';\r\nimport {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\n//Get posts\r\nexport const getPosts = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}api/posts/user/${userId}`\r\n    );\r\n\r\n    dispatch({ type: GET_POSTS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/posts`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Likes\r\nexport const updateLikes = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_API_URL}api/posts/like/${postId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postId, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `${process.env.REACT_APP_API_URL}api/posts/${postId}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: postId,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Comment\r\nexport const addComment = ({ postId, formData }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}api/posts/comment/${postId}`,\r\n      { text: formData },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: { id: postId, comments: res.data },\r\n    });\r\n\r\n    dispatch(setAlert('Comment added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Comment\r\nexport const deleteComment = ({ postId, commentId }) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(\r\n      `${process.env.REACT_APP_API_URL}api/posts/comment/${postId}/${commentId}`\r\n    );\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: { postId, commentId },\r\n    });\r\n    dispatch(setAlert('Comment deleted', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\PostCard.js",["175","176"],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\profile-forms\\DeleteButton.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\alertReducer.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\artisanProfileReducer.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\personProfileReducer.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\ArtisanCard.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\Thumbs.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\reducers\\postReducer.js",[],"C:\\Users\\asus\\Desktop\\GoMyCode\\project\\Bricola\\client\\src\\components\\CommentCard.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"185","line":138,"column":11,"nodeType":"183","messageId":"184","endLine":138,"endColumn":14},{"ruleId":"186","severity":1,"message":"187","line":18,"column":6,"nodeType":"188","endLine":18,"endColumn":8,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"187","line":24,"column":6,"nodeType":"188","endLine":24,"endColumn":35,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"191","line":22,"column":6,"nodeType":"188","endLine":22,"endColumn":8,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"191","line":28,"column":6,"nodeType":"188","endLine":28,"endColumn":8,"suggestions":"193"},{"ruleId":"181","severity":1,"message":"194","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":38,"column":6,"nodeType":"188","endLine":38,"endColumn":30,"suggestions":"195"},{"ruleId":"186","severity":1,"message":"196","line":84,"column":6,"nodeType":"188","endLine":84,"endColumn":8,"suggestions":"197"},{"ruleId":"186","severity":1,"message":"198","line":120,"column":6,"nodeType":"188","endLine":120,"endColumn":8,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":16,"column":6,"nodeType":"188","endLine":16,"endColumn":8,"suggestions":"201"},{"ruleId":"186","severity":1,"message":"187","line":22,"column":6,"nodeType":"188","endLine":22,"endColumn":23,"suggestions":"202"},{"ruleId":"186","severity":1,"message":"203","line":13,"column":6,"nodeType":"188","endLine":13,"endColumn":8,"suggestions":"204"},{"ruleId":"181","severity":1,"message":"185","line":78,"column":11,"nodeType":"183","messageId":"184","endLine":78,"endColumn":14},{"ruleId":"186","severity":1,"message":"205","line":28,"column":22,"nodeType":"206","endLine":28,"endColumn":37},{"ruleId":"186","severity":1,"message":"207","line":29,"column":19,"nodeType":"206","endLine":29,"endColumn":31},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["210"],["211"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userRole'. Either include them or remove the dependency array.",["212"],["213"],"'updateUser' is defined but never used.",["214"],"React Hook useEffect has missing dependencies: 'ProfileArtisan.loading', 'ProfileArtisan.profile.bio', 'ProfileArtisan.profile.city', 'ProfileArtisan.profile.equipment', 'ProfileArtisan.profile.street', 'ProfileArtisan.profile.user.job', 'ProfileArtisan.profile.user.name', 'ProfileArtisan.profile.user.phone', 'ProfileArtisan.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'ProfilePerson.loading', 'ProfilePerson.profile.city', 'ProfilePerson.profile.street', 'ProfilePerson.profile.user.job', 'ProfilePerson.profile.user.name', 'ProfilePerson.profile.user.phone', 'ProfilePerson.profile.zipcode', 'dispatch', and 'userRole'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'dispatch' and 'profileId'. Either include them or remove the dependency array.",["217"],["218"],"React Hook useEffect has missing dependencies: 'city', 'dispatch', 'equipment', 'job', and 'rate'. Either include them or remove the dependency array.",["219"],"Assignments to the 'commentsNumber' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'likesNumber' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [dispatch]",{"range":"239","text":"240"},"Update the dependencies array to be: [artisanProfileState.profile, dispatch]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch, userRole]",{"range":"243","text":"244"},{"range":"245","text":"244"},"Update the dependencies array to be: [ProfileArtisan.profile, dispatch]",{"range":"246","text":"247"},"Update the dependencies array to be: [ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.user.job, ProfileArtisan.profile.user.name, ProfileArtisan.profile.user.phone, ProfileArtisan.profile.zipcode, dispatch, userRole]",{"range":"248","text":"249"},"Update the dependencies array to be: [ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.user.job, ProfilePerson.profile.user.name, ProfilePerson.profile.user.phone, ProfilePerson.profile.zipcode, dispatch, userRole]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, profileId]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, profile.profile]",{"range":"254","text":"255"},"Update the dependencies array to be: [city, dispatch, equipment, job, rate]",{"range":"256","text":"257"},[703,705],"[dispatch]",[849,878],"[artisanProfileState.profile, dispatch]",[751,753],"[dispatch, userRole]",[870,872],[1270,1294],"[ProfileArtisan.profile, dispatch]",[2646,2648],"[ProfileArtisan.loading, ProfileArtisan.profile.bio, ProfileArtisan.profile.city, ProfileArtisan.profile.equipment, ProfileArtisan.profile.street, ProfileArtisan.profile.user.job, ProfileArtisan.profile.user.name, ProfileArtisan.profile.user.phone, ProfileArtisan.profile.zipcode, dispatch, userRole]",[3674,3676],"[ProfilePerson.loading, ProfilePerson.profile.city, ProfilePerson.profile.street, ProfilePerson.profile.user.job, ProfilePerson.profile.user.name, ProfilePerson.profile.user.phone, ProfilePerson.profile.zipcode, dispatch, userRole]",[581,583],"[dispatch, profileId]",[703,720],"[dispatch, profile.profile]",[479,481],"[city, dispatch, equipment, job, rate]"]
>>>>>>> master
